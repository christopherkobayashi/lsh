Sun Jan  3 16:54:29 1999    <ray@zensunni>

	* digit_table.c: Fixed declaration of main.

	* Makefile.am.in: remove .x files as part of maintainer-clean.

	* Makefile.am.in, lib/Makefile.am.in, include/Makefile.am.in: added
	support for ctags.

	* configure.in: Remove superfluous spacing in compiler warnings.

	* version.h, client.c (client_initiate), server.c (server_initiate):
	Split PROTOCOL_VERSION in CLIENT_PROTOCOL_VERSION and
	SERVER_PROTOCOL_VERSION, so the client won't report version 1.99 .

	* configure.in: Look for SSH1 daemon as plain `sshd' too. Test that it
	is usable.

Sat Jan  2 18:25:16 1999    <ray@zensunni>

	* TODO: Added logging; Noted we can't currently use Rivest's sexp code.

	* resource.h, lsh_types.h: fixed typo.

	* Makefile.am.in, lib/Makefile.am.in: Added pattern rule for
	dependencies; added phony target `depend' to force dependencies to be
	remade; remove dependency files (.P) as part of maintainer-clean.

Fri Jan  1 18:08:03 1999    <ray@zensunni>

	* acconfig.h, configure.in, server.c, version.h: Added skeleton for
	SSH1 fallback support.

	* TASKLIST: Added SSH1 fallback support.

	* configure.in: Rewrote the comment about _GNU_SOURCE .

	* AUTHORS, HACKING, NOTES, README, TODO: spelling, grammar fixes.

	* TASKLIST: We have zlib support now.

Mon Jan  4 11:25:43 1999    <nisse@puck>

	* werror.c: Avoid using stdio functions.

	* keyexchange.c (make_test_kexinit): Commented out this function.

	* io.c (write_raw): New function.
	(write_raw_with_poll): -"-

	* alist.c (alist_addv): New function.
	(alist_add): -"-

Fri Jan  1 04:20:10 1999    <nisse@puck>

	* make_char_classes (make-char-classes): Use #ifdef to separate
	the table from the #defines.

	* lsh_types.h (LSH_PARSED_OBJECT): New status code.

	* io.c: Include lsh headers *before* system headers.
	Use jpoll.h, not poll.h.

	* io.c: (get_inaddr): Use inet_aton. How portable is that?

	* poll.h, poll.c, pollemu.h, pollemu.c: Use the names jpoll (that
 	is the names used originally by Sean Reifschneider
 	<jafo@tummy.com>).

Thu Dec 31 15:29:59 1998    <ray@penguin.wi.leidenuniv.nl>

	* PORTS: new file.

	* io.c: #include "config.h" so the #ifdef HAVE_POLL works.

	* poll.h, pollemu.h: Renamed poll.h to pollemu.h; thus it will not be
	found instead of a system poll.h whith -I. or -I$(srcdir) .
	* pollemu.c, pollemu.h: Renamed too.
	* io.c, pollemu.c: Changed #include accordingly.
	* configure.in: Changed accordingly.

	* configure.in: check for `gethostbyname' instead of `hostbyname'.

	* io.c: define INADDR_NONE if the system doesn't provide it (e.g.
	Solaris).

	* io.c: #include <netinet/in.h> for struct in_addr.

Wed Dec 30 17:38:03 1998    <ray@penguin.wi.leidenuniv.nl>

        * io.c (get_inaddr): use symbolic constant to check inet_addr
        result; fixes name resolving on Linux/Alpha.

Thu Dec 31 00:06:43 1998    <nisse@puck>

	* server.c (do_open_session): Mark arguments as UNUSED.

	* read_packet.c (do_read_packet): Signedness fixes.

	* publickey_crypto.c (make_dss_verifier): Mark closure algorithm
	as UNUSED.

	* packet_ignore.c (do_ignore): Mark arguments as UNUSED.

	* make_class (do-struct-free-function, do-struct-mark-function):
	Avoid warnings about unused parameters when the generated
	functions are empty functions.

	* keyexchange.c (kex_make_key): Signedness fix.

	* io.c (get_inaddr): Use the protocol argument.

	* disconnect.c (do_disconnect): Mark arguments as UNUSED.

	* des.c (make_des_instance): Mark arguments as UNUSED.

	* debug.c (do_rec_debug): Mark arguments as UNUSED.

	* connection.c (do_fail): Marked connection argument UNUSED.

	* configure.in (CPPFLAGS): Add more warning flags. But *not*
	-Wcast-align.

	* client_userauth.c (do_userauth_banner): Marked connection
	argument UNUSED.

	* client_password.c (read_password): Marked max_length argument
	UNUSED.

	* client.c (client_close_die): Marked closure argument UNUSED.

	* channel.c (do_window_adjust): Marked connection argument UNUSED.
	(do_channel_data): -"-
	(do_channel_extended_data): -"-
	(do_channel_eof): -"-
	(do_channel_close): -"-
	(do_channel_open_confirm): -"-
	(do_channel_open_failure): -"-
	(do_channel_success): -"-
	(do_channel_failure): -"-

	* arcfour.c (make_arcfour_instance): Mark mode argument UNUSED.

	* io.c (get_inaddr): use symbolic constant to check inet_addr
 	result; fixes name resolving on Linux/Alpha.

Wed Dec 30 11:57:28 1998    <ray@zensunni>

	* atoms.in: added algorithms names used by SSH 2.0.11 (commented
 	out).

	* configure.in: Enable a few more warnings.

	* lib/desTest.c (method, encode, decode): ANSIfied function
	declarations.

	* include/des.h, desCode.h, desKerb.c, desQuick.c, desTest.c,
 	desUtil.c, desdata.c, desinfo.h: The DES code's copyright notice
 	is distributed in descore.README rather than plain README.

	* abstract_crypto.c (gcd): Avoid unsigned underflow.

	* sexp.c, sexp.h (sexp_nullp, sexp_c, sexp_a, sexp_z, sexp_n,
 	sexp_sn, sexp_format, encode_base64): Added const.

	* TODO: removed obsolete entries; made a separate section for
 	freeness issues, and noted scsh's non-freeness.

	* TASKLIST, TODO: Fixed typos.

Wed Dec 30 01:14:28 1998    <nisse@puck>

	* lsh_types.h (LSH_SYNTAX): New error code.

	* lib/desTest.c (now): Disable use of rusage.

	* sexp.c: Started on parser. Not at all working yet.
	* sexp.h (sexp_iterator): Added iterator abstraction.

	* lsh_types.h (MAX): Bug fix (by ceder).

Mon Dec 28 14:14:57 1998    <nisse@puck>

	* keyexchange.c (kex_make_key): Expand keys, when the required key
	length is longer than tha hash output. (Bazsi).

Sun Dec 27 06:37:40 1998    <nisse@puck>

	* compress.c (packet_compressor): Removed the mode variable.

	* server.c (do_line): Compression support.

	* make_class: New type special-struct.

	* lsh.c (main): Zlib support.
	* lshd.c (main): Zlib support.

	* keyexchange.c (kex_make_deflate): New function.
	(kex_make_inflate): New function.
	(do_handle_newkeys): Compression support.
	(make_newkeys_handler): -"-
	(do_install): -"-

	* compress.h, compress.c, abstract_compress.c,
	abstract_compress.h, zlib.h, zlib.c: New files (by Bazsi).
	
	* connection.c (connection_init_io): Compression support.
	* client.c (do_line): Compression support.

	* client.c (do_exit_signal): Send CHANNEL_EOF.

	* configure.in: Fixed the configure test for shutdown. Check for
	zlib.

Sat Dec 26 02:37:18 1998    <nisse@puck>

	* keyexchange.c (do_install): Bugfix: Look at closure->is_server
	when generating MAC-keys (noted by Bazsi).

	* lsh_keygen.c (main): Added getopt support. New options for
	algorithm and output style.

Wed Dec 23 23:06:45 1998    <nisse@puck>

	* format.c (ssh_vformat_length): Added 'd' modifier, for
	sexp-style length prefixes.
	(ssh_vformat_write): -"-

Sun Dec 20 20:11:02 1998    <nisse@puck>

	* arcfour.c, blowfish.c, cascade.c, cbc.c, des.c, hmac.c, md5.c,
	sha.c: New files, extracted from crypto.c and abstract_crypto.c.
	
	* server.c (do_line): Accept client version 1.99, if
	DATAFELLOWS_SSH2_GREETING_WORKAROUND is defined.

	* randomness.c (make_poor_random): Allow NULL init string. Use pid
	for seeding.
	(make_device_random): New function.
	(make_reasonably_random): New function.

	* bignum.c (bignum_write): New function.
	(bignum_random_size): New function.
	(bignum_small_factor): New function.
	(bignum_next_prime): New function.

	* Makefile.am.in (noinst_LIBRARIES): Collect most object files
	into liblsh.a.

Fri Dec 18 01:53:22 1998    <nisse@puck>

	* server.c (do_eof): Consider closing (if CHANNEL_SENT_EOF and
	CHANNEL_CLOSE_AT_EOF are both set).

	* keyexchange.c (make_test_kexinit): Added hmac-md5 to the list of
	acepted mac algorithms.

	* io.h (CLOSE_EOF): Changed the meaning of this constant. Now used
	also for EOF on writing.
	* io.c (prepare_write): Use the close_reason CLOSE_EOF when a
 	closed write_buffer has been flushed successfully.

	* io.c (write_callback): Report EPIPE and other write failures
	differently.
	

	* crypto.c: Added md5 support by Balazs Scheidler.

	* client.c (do_exit_status): Bugfix: Changed && to &.

	* channel.c (channel_close_callback): Don't close channel when a
	connected file is closed when we expect it.

	* resource.c (do_free_resources): *Never* call lsh_object_free,
	except from the gc_sweep function!

Thu Dec 17 16:27:22 1998    <nisse@puck>

	* server.c (make_process_resource): New function.
	(server_die): Kill resources associated with the connection.
	(do_close): New callback function till kill the process if the
	channel is closed unexpectedly.

	server.c (do_exit_shell): Don't close the process's stdin, or the
 	channel, until the client asks for it.

	* server.c (make_server_close_handler): Take connection as
	argument.

Wed Dec 16 01:33:25 1998    <nisse@puck>

	* resource.h, resource.c: New files.
	
	* channel.h (CHANNEL_CLOSE_AT_EOF): This flag now means that
	the channel should be closed when EOF have been both sent and
	received.
	* channel.c (channel_eof): New meaning of CHANNEL_CLOSE_AT_EOF
	flag.

	* client.c (do_exit_status): Send eof, if we haven't done that
	already.

	* channel.c (do_channel_eof): Don't initiate close automatically
	when eof has been both sent and received.

	* list.c (make_int_listv): New function
	(make_object_listv): New function

	* keyexchange.c (do_install): Unified key installation.

	* client_keyexchange.c (do_handle_dh_reply): Better handling of
	weak keys (i.e. INSTALL_KEYS() returning NULL).
	* server_keyexchange.c (do_handle_dh_init): -"-

Tue Dec 15 00:01:33 1998    <nisse@puck>

	* xalloc.c (lsh_list_alloc): Avoid unsigned under flow when length
	is zero.

Mon Dec 14 21:58:27 1998    <nisse@puck>

	* parse.c (parse_atom_list): New limit argument; longer lists will
	return NULL.

Sat Dec 12 11:11:23 1998    <ray@zensunni>

	* configure.in: Clarified comment. Added several warnings.

	* keyexchange.c (select_algorithm): Had a terminiation condition
 	"i < LIST_LENGTH(client_list) >= 0" in a for loop, which is
 	probably nonsensical. Removed >= 0 part.

	* lsh_types.h: Introduced UNUSED annotation. Enable GNU libc
	extensions. Note: lsh_types.h must be included before any system header
	for this to work properly.

	* Makefile.am.in: Make gperf produce ANSI C output, and postprocess it
	to fully initialise wordlist.

	* lshd.c, lsh.c: Added a short usage string.

	* include/crypto_types.h: Improved error messages.

	* process_atoms: removed `.sh' from generator name in output.

	* include/idea.h, lib/idea.c: Added note about IDEA being patent
	encumbered.

	* channel.c, keyexchange.c, lib/md5.c, lib/sha.c, pad.c, parse.c,
	randomness.c, write_buffer.c: #include <string.h> for memcpy().

	* bignum.c: #include <stdlib.h> for alloca().

	* server_password.c: #include <crypt.h>

	* io.c, reaper.c: Removed obsolete use of sa_restorer field of struct
	sigaction. (This broke compilation on Linux/Alpha with glibc 2.0.high).
	Initialised struct sigaction in a more portable fashion.

	* bignum.c, charset.c, client_userauth.c, format.c, format.h, io.c,
	list.c: Signedness/type fixes.
	
	* channel.c, client.c, client.h, debug.c, debug.h, disconnect.c,
	disconnect.h, format.c, format.h, keyexchange.c, keyexchange.h,
	process_atoms, server.c, server.h, werror.c, werror.h: Constness
	improvements.

	* client_userauth.c, format.c: Added internal prototypes.
	
	* crypto.c: Added UNUSED annotations.

	* lib/util.c, lib/util.h, include/types.h: New. Bridge from GPG style
	to lsh style, for blowfish.

	* include/blowfish.h, lib/blowfish.c: Added blowfish code from GPG.

	* crypto.c, crypto.c.x, crypto.h, lib/Makefile.am.in, lshd.c, lsh.c:
	Added blowfish support.

	* lib/Makefile.am.in: added dependency of desUtil.o on the generated
	DES header files.

	* TODO: Additions.

	* Various spelling fixes.

Tue Dec  8 10:29:50 1998    <nisse@puck>

	* server_password.c (lookup_user): Integrated support for shadow
 	passwords, by Keresztg <kg230@hszk.bme.hu>.

	* server.c (do_exit_shell): Close channel, if we have already sent
	EOF.

	* xalloc.c (lsh_object_clone): New function.

	* server_keyexchange.c (do_init_dh): Copy the server key (as
	strings can't be shared).

	* crypto.c (do_sha_copy, ): Use the CLONE macro instead of memcpy to
	copy instances.
	(do_hmac_copy): -"-

Fri Dec  4 02:30:28 1998    <nisse@puck>

	* (practically every file): Adapted to new gc and object system.

	* xalloc.c (lsh_object_check_subtype): Allow NULL pointers. They
	are occasionally permissible (for instance, the NULL crypto
	algorithm), and when they aren't the error will be detected early
	anyway.
	(lsh_object_check): -"-

	* keyexchange.c (do_handle_kexinit): Use an object_list for
 	passing around the selected algorithms. The void ** that was used
 	earlier was unfriendly to the gc.

Sun Nov 22 00:57:16 1998    <nisse@puck>

	* lsh.c (main): Bug fix (pass *address* of crypto_rc4_algorithm).
 	Thanks to Keresztg <kg230@hszk.bme.hu>.

	* lshd.c (main): -"-

	* lsh_types.h: Moved definitions of UINT* to
	include/crypto_types.h.

	* io.c: Use Sean Reifschneider's poll-by-select emulation if
	poll() is unavailable.

