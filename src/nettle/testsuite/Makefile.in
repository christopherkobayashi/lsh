@SET_MAKE@

srcdir = @srcdir@
VPATH = @srcdir@

top_srcdir = @top_srcdir@

include ../config.make

PRE_CPPFLAGS = -I.. -I$(top_srcdir)
PRE_LDFLAGS = -L..

TS_SOURCES = aes-test.c arcfour-test.c arctwo-test.c \
	     blowfish-test.c cast128-test.c \
             base16-test.c base64-test.c \
	     des-test.c des3-test.c des-compat-test.c \
	     md2-test.c md4-test.c md5-test.c md5-compat-test.c \
	     sha1-test.c sha256-test.c \
	     serpent-test.c twofish-test.c \
	     buffer-test.c sexp-test.c sexp-format-test.c \
	     rsa2sexp-test.c sexp2rsa-test.c \
	     knuth-lfib-test.c \
	     cbc-test.c ctr-test.c hmac-test.c bignum-test.c \
	     pkcs1-test.c \
	     rsa-test.c rsa-encrypt-test.c rsa-keygen-test.c \
	     dsa-test.c dsa-keygen-test.c \
	     yarrow-test.c
TARGETS = $(TS_SOURCES:.c=$(EXEEXT))
TS_SH = sexp-conv-test pkcs1-conv-test symbols-test
TS_ALL = $(TARGETS) $(TS_SH)
EXTRA_SOURCES = sha1-huge-test.c
EXTRA_TARGETS = $(EXTRA_SOURCES:.c=$(EXEEXT))

SOURCES = $(TS_SOURCES) testutils.c

DISTFILES = $(SOURCES) Makefile.in $(TS_SH) run-tests teardown-env \
	rfc1750.txt testutils.h

all: $(TARGETS) $(EXTRA_TARGETS)

# BSD (and Solaris) make doesn't allow extra dependencies together one
# single-suffix rules. So in the common case of $(EXEEXT) empty, we
# need a rule -test.$(OBJEXT)-test$(EXEEXT): rather than the simpler
# .$(OBJEXT)$(EXEEXT):

.SUFFIXES: -test.c -test.$(OBJEXT) -test$(EXEEXT)

.c.$(OBJEXT):
	$(COMPILE) -c $< && $(DEP_PROCESS)

# It seems really tricky to write suffix rules for the transformation
# foo-test.o -> foo-test, that work with all make variants. We use a a
# %-rule that works with Solaris make and GNU-make and a two-suffix
# -test.o-test: that works for BSD make and GNU make. For BSD make, we
# also need a -test.c-test.o rule.

%$(EXEEXT): %.$(OBJEXT)
	$(LINK) $< testutils.$(OBJEXT) -lnettle $(LIBS) -o $@

-test.c-test.$(OBJEXT):
	$(COMPILE) -c $< && $(DEP_PROCESS)

-test.$(OBJEXT)-test$(EXEEXT):
	$(LINK) $< testutils.$(OBJEXT) -lnettle $(LIBS) -o $@

$(TARGETS) $(EXTRA_TARGETS) : testutils.$(OBJEXT) ../libnettle.a

check: $(TS_ALL) $(srcdir)/run-tests
	LD_LIBRARY_PATH=../.lib srcdir="$(srcdir)" \
	  $(srcdir)/run-tests $(TS_ALL)


Makefile: $(srcdir)/Makefile.in ../config.status
	cd .. && $(SHELL) ./config.status testsuite/$@

install uninstall:
	true

distdir: $(DISTFILES)
	cp $? $(distdir)

clean:
	-rm -f $(TARGETS) *.o test.in test1.out test2.out

distclean: clean
	-rm -f Makefile *.d

@DEP_INCLUDE@ $(SOURCES:.c=.$(OBJEXT).d)
