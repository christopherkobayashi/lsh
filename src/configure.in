dnl -*-shell-script-*-
dnl $Id$

dnl Process this file with autoconf to produce a configure script.
AC_INIT(keyexchange.h)

dnl No real versioning yet, use dated snapshots instead.
dnl AM_INIT_AUTOMAKE(lsh, snapshot-`date +%Y-%m-%d`)
AM_INIT_AUTOMAKE(lsh, snapshot-esyscmd([date +%Y-%m-%d]))

AM_CONFIG_HEADER(config.h)

# We want an absolute path to the source-dir.
case "$srcdir" in
    /*)
    ;;
    *)
	oldsrcdir="$srcdir"
	srcdir="`cd \"$srcdir\";pwd`"
	AC_MSG_WARN([ Converted $oldsrcdir to $srcdir,
If this does not work, please use an absolute path to the configure script. ])
    ;;
esac

# We want to compile the crypto lib for use with lsh
CPPFLAGS="$CPPFLAGS -I$srcdir/include -I$srcdir -DLSH"

# GNU libc defaults to supplying the ISO C library functions only. 
# initgroups() and strsignal() are extensions; the _GNU_SOURCE define
# enables these extensions.
# Enable it on all systems; no problems have been reported with it so far.

CPPFLAGS="$CPPFLAGS -D_GNU_SOURCE"

dnl Check options
AC_ARG_WITH(debug_alloc,
  [--with-debug-alloc    sanity check memory allocation and casts],,
  [with_debug_alloc=yes])

if test x$with_debug_alloc = xyes ; then
  AC_DEFINE(DEBUG_ALLOC)
fi

AC_ARG_WITH(zlib,
  [--with-zlib    use zlib compression],,
  [with_zlib=yes])

dnl Checking this variable is delayed until we have checked if zlib is
dnl actually available.

AC_ARG_WITH(sshd1,
  [--with-sshd1[=PROGRAM]    support fallback to SSH1 daemon (broken)])

dnl Checking this variable is delayed until we have checked if an SSH1
dnl server is actually available.

AC_ARG_WITH(idea,
  [--with-idea    support the patent-encumbered IDEA algorithm],,
  [with_idea=no])

if test x$with_idea = xyes ; then
  AC_DEFINE(WITH_IDEA)
fi

dnl Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AM_PROG_CC_STDC

if test x$am_cv_prog_cc_stdc = xno ; then
  AC_ERROR([the C compiler doesn't handle ANSI-C])
fi

dnl Checks for libraries.
AC_CHECK_LIB(gmp, mpz_set_d,,
dnl Some debian systems have both gmp1 and gmp2.
    [AC_CHECK_LIB(gmp2, mpz_set_d,,
	AC_ERROR([GMP is missing (ftp://ftp.gnu.org/pub/gnu/gmp-2.0.2.tar.gz)]))])

AC_CHECK_LIB(z, inflate,, [with_zlib=no])
AC_CHECK_LIB(crypt, crypt)
AC_CHECK_LIB(xnet, inet_addr)
AC_CHECK_LIB(nsl, gethostbyname)
AC_CHECK_LIB(socket, setsockopt)

dnl Checks for header files.
AC_HEADER_STDC

dnl Some debian systems have both gmp and gmp2.
dnl This will probably not work right if both gmp.h and gmp2/gmp.h exists,
dnl and gmp.h is too old (i.e GMP-1.x).
gmp_header_found=no
AC_CHECK_HEADERS(gmp.h gmp2/gmp.h, [gmp_header_found=yes; break])
if test "$gmp_header_found" = no; then
  AC_ERROR([Neither gmp.h nor gmp2/gmp.h found])
fi
  
AC_CHECK_HEADERS(fcntl.h strings.h sys/time.h unistd.h)
AC_CHECK_HEADERS(shadow.h)
AC_CHECK_HEADERS(zlib.h,, [with_zlib=no])

dnl Should we use zlib?

if test x$with_zlib = xyes ; then
  AC_DEFINE(WITH_ZLIB)
fi

dnl Find the SSH1 daemon; try 'sshd1' first; if it fails, look for 'sshd'
if test x$with_sshd1 = xyes ; then
  AC_DEFINE(SSH1_FALLBACK)
  dnl We have to provide an additional path: regular users seldomly have
  dnl the sbin directories in their $PATH.
  AC_PATH_PROG(SSHD1BIN, sshd1, [],
    $PATH:/usr/local/sbin:/usr/local/etc:/usr/sbin:/usr/etc:/sbin:/etc)
  if test x$SSHD1BIN = x ; then
    AC_PATH_PROG(SSHD1BIN, sshd, [],
      $PATH:/usr/local/sbin:/usr/local/etc:/usr/sbin:/usr/etc:/sbin:/etc)
  fi
  if test x$SSHD1BIN = x ; then
    AC_MSG_ERROR([
You requested SSH1 fallback support (--with-sshd1), but no sshd1 could be found.
You can
- supply the location of sshd1, i.e. --with-sshd1=/home/foo/sbin/sshd ,
- install sshd1 (ftp://ftp.cs.hut.fi/pub/ssh/); note that it is not free
  software, or
- configure --without-sshd1 .
])
  fi

  dnl OK. We've found an SSH1 daemon. Now we need to make sure it is
  dnl recent enough to be used as a fallback daemon. This means it has to
  dnl support the -V option, which tells it not to read the client version 
  dnl string as lshd has already done that, and which supplies that version
  dnl string.
  AC_MSG_CHECKING(if $SSHD1BIN has the -V compatibility flag)
changequote(<<, >>)dnl
  if ($SSHD1BIN -h 2>&1 ; true) | grep '^[ \t]*-V' > /dev/null ; then
changequote([, ])dnl
    AC_MSG_RESULT(yes)
  else
    AC_MSG_ERROR([
Found SSH1 daemon ]$SSHD1BIN[, but it does not support the -V option.
This means we cannot use it as a fallback daemon. Please install a more recent 
SSH1 daemon (ftp://ftp.cs.hut.fi/pub/ssh/), or configure --without-sshd1 .])
  fi
  AC_DEFINE_UNQUOTED(SSHD1,"$SSHD1BIN")
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
dnl FIXME: We should check that a pid_t fits in an int
	
dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(select socket strerror strtol)
AC_CHECK_FUNCS(getspnam)
AC_CHECK_FUNCS(vsnprintf inet_aton)

AC_CHECK_FUNCS(poll,,[LIBOBJS = jpoll.o $LIBOBJS])

dnl This macro is mentioned in the automake manual, but where is it
dnl supposed to be defined?
dnl AC_REPLACE_GNU_GETOPT

AC_CHECK_FUNCS(getopt_long,,[LIBOBJS = getopt.o getopt1.o $LIBOBJS])

dnl Check for broken shutdown
AC_CACHE_CHECK(for working shutdown on AF_UNIX sockets,
	       lsh_cv_func_shutdown_works_on_unix_sockets,
[
AC_TRY_RUN([
#include <stdio.h>

#include <errno.h>

#include <sys/types.h>
#include <sys/socket.h>

#include <signal.h>

#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif

/* Creates a one-way socket connection. Returns 1 on success, 0 on
 * failure. fds[0] is for reading, fds[1] for writing (like for the
 * pipe() system call). */
static int make_pipe(int *fds)
{

#ifndef SHUT_RD
#define SHUT_RD 0
#define SHUT_WR 1
#define SHUT_RDWR 2
#endif

  if (socketpair(AF_LOCAL, SOCK_STREAM, 0, fds) < 0)
    {
      fprintf(stderr, "socketpair() failed: %s\n", strerror(errno));
      return 0;
    }
  fprintf(stderr, "Created socket pair. Using fd:s %d <-- %d\n", fds[0], fds[1]);

  if(shutdown(fds[0], SHUT_WR) < 0)
    {
      fprintf(stderr, "shutdown(%d, SHUT_WR) failed: %s\n",
	      fds[0], strerror(errno));
      return 0;
    }
  if (shutdown(fds[1], SHUT_RD) < 0)
    {
      fprintf(stderr, "shutdown(%d, SHUT_RD) failed: %s\n",
	      fds[1], strerror(errno));
      return 0;
    }

  return 1;
}

int main(int argc, char **argv)
{
  int fds[2];
  
  if (!make_pipe(fds))
    exit(1);

  if (signal(SIGPIPE, SIG_IGN) == SIG_ERR)
    {
      fprintf(stderr, "signal failed.\n");
      exit(1);
    }

  if ( (write(fds[1], "foo", 3) < 0)
       && (errno == EPIPE))
    exit(1);

  exit(0);
}
], lsh_cv_func_shutdown_works_on_unix_sockets=yes,
   lsh_cv_func_shutdown_works_on_unix_sockets=no,
   lsh_cv_func_shutdown_works_on_unix_sockets=yes)])

if test x$lsh_cv_func_shutdown_works_on_unix_sockets = xyes ; then
    AC_DEFINE(SHUTDOWN_WORKS_WITH_UNIX_SOCKETS)
fi

dnl Check for gcc's __attribute__ construction
AC_CACHE_CHECK(for __attribute__,
	       lsh_cv_c_attribute,
[ AC_TRY_COMPILE([
#include <stdlib.h>
],
[
static void foo(void) __attribute__ ((noreturn));

static void __attribute__ ((noreturn))
foo(void)
{
  exit(1);
}
],
lsh_cv_c_attribute=yes,
lsh_cv_c_attribute=no)])

if test "$lsh_cv_c_attribute" = "yes"; then
  AC_DEFINE(HAVE_ATTRIBUTE)
fi

# Set these flags *last*, or else the test programs won't compile
if test x$GCC = xyes ; then
    CFLAGS="$CFLAGS -Wall -W \
 -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes \
 -Waggregate-return \
 -Wpointer-arith -Wbad-function-cast -Wnested-externs"

# Don't enable -Wcast-align as it results in tons of warnings in the
# DES code. And when using stdio.

fi

AC_OUTPUT(Makefile lib/Makefile include/Makefile doc/Makefile)
